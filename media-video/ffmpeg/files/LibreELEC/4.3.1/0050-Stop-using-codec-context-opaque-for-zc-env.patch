From 5c4c7898323b05b67610ff140d31821ebce1f6b0 Mon Sep 17 00:00:00 2001
From: John Cox <jc@kynesim.co.uk>
Date: Tue, 7 Jul 2020 14:43:33 +0100
Subject: [PATCH 50/55] Stop using codec context opaque for zc env

---
 libavcodec/internal.h    |  2 ++
 libavcodec/rpi_zc.c      | 13 ++++++-------
 libavcodec/rpivid_hevc.c |  2 +-
 3 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/libavcodec/internal.h b/libavcodec/internal.h
index 0a72a0e372..a010a81ee8 100644
--- a/libavcodec/internal.h
+++ b/libavcodec/internal.h
@@ -196,6 +196,8 @@ typedef struct AVCodecInternal {
     int initial_sample_rate;
     int initial_channels;
     uint64_t initial_channel_layout;
+
+    void * zc_env;
 } AVCodecInternal;
 
 struct AVCodecDefault {
diff --git a/libavcodec/rpi_zc.c b/libavcodec/rpi_zc.c
index 37be9a0f49..02f1921ee5 100644
--- a/libavcodec/rpi_zc.c
+++ b/libavcodec/rpi_zc.c
@@ -1,6 +1,7 @@
 #include "config.h"
 
-#include "libavcodec/avcodec.h"
+#include "avcodec.h"
+#include "internal.h"
 #include "rpi_mem.h"
 #include "rpi_mailbox.h"
 #include "rpi_zc.h"
@@ -45,7 +46,6 @@ typedef struct ZcOldCtxVals
 {
     int thread_safe_callbacks;
     int (*get_buffer2)(struct AVCodecContext *s, AVFrame *frame, int flags);
-    void * opaque;
 } ZcOldCtxVals;
 
 typedef struct AVZcEnv
@@ -1163,7 +1163,7 @@ static int zc_get_buffer2(struct AVCodecContext *s, AVFrame *frame, int flags)
     else if (frame->format == AV_PIX_FMT_YUV420P ||
              av_rpi_is_sand_frame(frame))
     {
-        if ((rv = av_rpi_zc_get_buffer(s->opaque, frame)) == 0)
+        if ((rv = av_rpi_zc_get_buffer(s->internal->zc_env, frame)) == 0)
             rv = av_rpi_zc_resolve_frame(frame, ZC_RESOLVE_ALLOC_VALID);
     }
     else
@@ -1201,12 +1201,11 @@ int av_rpi_zc_init2(struct AVCodecContext * const s,
         return AVERROR(ENOMEM);
 
     zc->old = (ZcOldCtxVals){
-        .opaque = s->opaque,
         .get_buffer2 = s->get_buffer2,
         .thread_safe_callbacks = s->thread_safe_callbacks
     };
 
-    s->opaque = zc;
+    s->internal->zc_env = zc;
     s->get_buffer2 = zc_get_buffer2;
     s->thread_safe_callbacks = 1;
     return 0;
@@ -1214,12 +1213,12 @@ int av_rpi_zc_init2(struct AVCodecContext * const s,
 
 void av_rpi_zc_uninit2(struct AVCodecContext * const s)
 {
-    ZcEnv * const zc = s->opaque;
+    ZcEnv * const zc = s->internal->zc_env;
 
     av_assert0(av_rpi_zc_in_use(s));
 
     s->get_buffer2 = zc->old.get_buffer2;
-    s->opaque = zc->old.opaque;
+    s->internal->zc_env = NULL;
     s->thread_safe_callbacks = zc->old.thread_safe_callbacks;
 
     av_rpi_zc_env_release(zc);
diff --git a/libavcodec/rpivid_hevc.c b/libavcodec/rpivid_hevc.c
index 95550b106b..ffcca130e0 100644
--- a/libavcodec/rpivid_hevc.c
+++ b/libavcodec/rpivid_hevc.c
@@ -1776,7 +1776,7 @@ static int rpivid_hevc_alloc_frame(AVCodecContext * avctx, AVFrame *frame)
 
     if (av_rpi_zc_in_use(avctx))
     {
-        const AVZcEnvPtr zc = avctx->opaque;
+        const AVZcEnvPtr zc = avctx->internal->zc_env;
         av_rpi_zc_set_decoder_pool_size(zc, pool_req);
         av_rpi_zc_get_buffer(zc, frame);   // get_buffer2 would alloc
     }
-- 
2.29.2

