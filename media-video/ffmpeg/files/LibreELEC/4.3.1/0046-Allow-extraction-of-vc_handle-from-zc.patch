From 912640f4dcc98bd8b48635cb8d7e6afbb6dad357 Mon Sep 17 00:00:00 2001
From: John Cox <jc@kynesim.co.uk>
Date: Mon, 4 May 2020 17:24:27 +0100
Subject: [PATCH 46/54] Allow extraction of vc_handle from zc

(cherry picked from commit 6185cc841530612783e49bc073ea83f68ba13b2a)
---
 libavcodec/rpi_zc.c | 13 +++++++++++++
 libavcodec/rpi_zc.h | 22 ++++++++--------------
 2 files changed, 21 insertions(+), 14 deletions(-)

diff --git a/libavcodec/rpi_zc.c b/libavcodec/rpi_zc.c
index 04af15159f..37be9a0f49 100644
--- a/libavcodec/rpi_zc.c
+++ b/libavcodec/rpi_zc.c
@@ -545,6 +545,13 @@ AVRpiZcFrameGeometry av_rpi_zc_frame_geometry(
 
             pthread_mutex_unlock(&sand_lock);
 
+#if 0
+            printf("Req: %dx%d: stride=%d/%d, height=%d/%d, stripes=%d, img.pitch=%d\n",
+                   video_width, video_height,
+                   geo.stride_y, geo.stride_c,
+                   geo.height_y, geo.height_c,
+                   geo.stripes, img.pitch);
+#endif
             av_assert0((int)geo.height_y > 0 && (int)geo.height_c > 0);
             av_assert0(geo.height_y >= video_height && geo.height_c >= video_height / 2);
             break;
@@ -676,6 +683,12 @@ static inline GPU_MEM_PTR_T * pic_gm_ptr(AVBufferRef * const buf)
     return &pic_zbe_ptr(buf)->gmem;
 }
 
+unsigned int av_rpi_zc_vcsm_handle(const AVRpiZcRefPtr fr_ref)
+{
+    const GPU_MEM_PTR_T * const p = pic_gm_ptr(fr_ref);
+    return p == NULL ? 0 : p->vcsm_handle;
+}
+
 int av_rpi_zc_vc_handle(const AVRpiZcRefPtr fr_ref)
 {
     const GPU_MEM_PTR_T * const p = pic_gm_ptr(fr_ref);
diff --git a/libavcodec/rpi_zc.h b/libavcodec/rpi_zc.h
index efc8ad4160..18e71314bb 100644
--- a/libavcodec/rpi_zc.h
+++ b/libavcodec/rpi_zc.h
@@ -76,16 +76,6 @@ AVRpiZcFrameGeometry av_rpi_zc_frame_geometry(
     const int format,
     const unsigned int video_width, const unsigned int video_height);
 
-// Replacement fn for avctx->get_buffer2
-// Should be set before calling avcodec_decode_open2
-//
-// N.B. in addition to to setting avctx->get_buffer2, avctx->refcounted_frames
-// must be set to 1 as otherwise the buffer info is killed before being returned
-// by avcodec_decode_video2.  Note also that this means that the AVFrame that is
-// returned must be manually derefed with av_frame_unref.  This should be done
-// after av_rpi_zc_ref has been called.
-int av_rpi_zc_get_buffer2(struct AVCodecContext *s, AVFrame *frame, int flags);
-
 // Generate a ZC reference to the buffer(s) in this frame
 // If the buffer doesn't appear to be one allocated by ZC
 // then the behaviour depends on maycopy:
@@ -100,6 +90,9 @@ AVRpiZcRefPtr av_rpi_zc_ref(void * const logging_context, const AVZcEnvPtr zc,
 // Get the vc_handle from the frame ref
 // Returns -1 if ref doesn't look valid
 int av_rpi_zc_vc_handle(const AVRpiZcRefPtr fr_ref);
+// Get the vcsm_handle from the frame ref
+// Returns 0 if ref doesn't look valid
+unsigned int av_rpi_zc_vcsm_handle(const AVRpiZcRefPtr fr_ref);
 // Get offset from the start of the memory referenced
 // by the vc_handle to valid data
 int av_rpi_zc_offset(const AVRpiZcRefPtr fr_ref);
@@ -119,8 +112,11 @@ void av_rpi_zc_unref(AVRpiZcRefPtr fr_ref);
 int av_rpi_zc_in_use(const struct AVCodecContext * const s);
 
 // Init ZC into a context
-// There is nothing magic in this fn - it just packages setting
-// get_buffer2 & get_buffer_context
+// Sets opaque, get_buffer2, thread_safe_callbacks
+// Use if you want to allocate your own pools and/or create ZC buffers for
+// all decoders
+// RPI HEVC decoders will allocate appropriate VCSM buffers which can be taken
+// apart by av_rpi_zc_xxx calls without this
 
 typedef AVBufferRef * av_rpi_zc_alloc_buf_fn_t(void * pool_env, size_t size,
                                                const AVRpiZcFrameGeometry * geo);
@@ -131,8 +127,6 @@ int av_rpi_zc_init2(struct AVCodecContext * const s,
                     av_rpi_zc_free_pool_fn_t * free_pool_fn);
 
 // Free ZC from a context
-// There is nothing magic in this fn - it just packages unsetting
-// get_buffer2 & get_buffer_context
 void av_rpi_zc_uninit2(struct AVCodecContext * const s);
 
 void av_rpi_zc_int_env_freep(AVZcEnvPtr * zc);
-- 
2.29.2

